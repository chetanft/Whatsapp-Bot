// Configuration
export const CONFIG = {
    TYPING_DELAY: 1000,
    MAX_MESSAGE_LENGTH: 1000,
    SUPPORTED_LANGUAGES: ['en', 'te', 'hi'],
    DEFAULT_LANGUAGE: 'en',
    TRIP_STATES: {
        NOT_STARTED: 'NOT_STARTED',
        STARTED: 'STARTED',
        IN_TRANSIT: 'IN_TRANSIT',
        STOPPED: 'STOPPED',
        APPROACHING: 'APPROACHING',
        ARRIVED: 'ARRIVED',
        COMPLETED: 'COMPLETED'
    }
};

// Message Templates for all languages
export const MessageTemplates = {
    en: {
        welcome: 'Welcome to Freight Tiger! ЁЯЪЫ',
        selectLanguage: 'Please select your preferred language:',
        languageSet: 'Language set to English',
        consentRequest: 'Do you consent to share your location and trip details?',
        consentAccepted: 'Thank you for your consent. Your trip will begin shortly.',
        consentRejected: 'You must provide consent to continue. Would you like to try again?',
        tripCreated: `
ЁЯЪЫ *New Trip Created*
Trip ID: {tripId}
Driver: {driverName}
Vehicle: {vehicleNumber}
From: {origin}
To: {destination}

Please select your preferred language to continue.`,
        tripStarted: `тЬЕ Trip tracking started!
Trip Details:
ЁЯЖФ Trip ID: {tripId}
ЁЯСд Driver: {driverName}
ЁЯЪЫ Vehicle: {vehicleNumber}
ЁЯУН From: {origin}
ЁЯОп To: {destination}
тП▒я╕П ETA: {eta}`,
        tripInProgress: "ЁЯЪЪ Vehicle is currently at {location}, moving at {speed} km/h. ETA: {eta}",
        longStoppage: `тЪая╕П *Long Stoppage Alert*
Vehicle has been stopped at {location} for {duration}.
Please select reason for stoppage or provide details.`,
        approachingDelivery: `
ЁЯУН *Approaching Delivery Point*
Distance Remaining: {distance} KM
ETA: {eta}
Delivery Location: {destination}`,
        uploadEpod: 'Please upload the ePOD document.',
        enterOtp: 'Please enter the OTP received:',
        tripCompleted: 'Trip completed successfully! Thank you for using our service. ЁЯОЙ',
        diversionAlert: `тЪая╕П *Diversion Alert*
Vehicle has deviated from planned route.
Current Location: {location}
Please explain the reason for diversion:`,
        epodUploading: 'Uploading ePOD document... Please wait.',
        epodUploaded: 'ePOD document uploaded successfully! тЬЕ',
        otpVerified: 'OTP verified successfully! Your delivery has been confirmed. тЬЕ',
        selected: 'You selected: {option}',
        deviationReasonRecorded: 'Deviation reason recorded: {reason}',
        returnToRoute: 'Please return to the planned route as soon as possible.',
        processingUnloading: 'Processing unloading at {numPoints} location(s).',
        invalidAuthorizationOption: 'Invalid authorization option. Please select a valid option.',
        recordedBags: 'тЬЕ Recorded {numBags} bags at this location.',
        noUnloadingPointsRecorded: 'No unloading points recorded. Please try again.',
        buttons: {
            accept: 'Accept',
            decline: 'Decline',
            confirm: 'Confirm',
            update: 'Update',
            report: 'Report'
        },
        stoppageReasons: [
            'Lunch Break',
            'Vehicle Maintenance',
            'Traffic',
            'Rest Stop',
            'Other'
        ],
        deviationReasons: [
            'Traffic Congestion',
            'Road Construction',
            'Accident on Route',
            'Police Checkpost',
            'Weather Conditions',
            'Other'
        ],
        consentApproved: "тЬЕ Your consent has been approved. Starting trip tracking...",
        consentPending: "тП│ Your consent is pending approval.",
        waitForApproval: "Please wait while we process your consent. This may take a few minutes.",
        consentRejected: "тЭМ Your consent has been rejected.",
        requestResendConsent: "Request New Consent Message",
        consentResendRequested: "тЬЙя╕П We have requested to resend the consent message.",
        waitForNewConsent: "You will receive a new consent message shortly. Please check your WhatsApp messages.",
        consentResendError: "тЪая╕П Unable to request new consent message. Please try again later.",
        waitForConsentApproval: "Please wait for some time to get consent approval message to your phone and give the consent to that message.",
        diversionProcessHelp: "Please continue with the diversion process or type 'help' for assistance.",
        alerts: {
            longStoppage: `тЪая╕П *Long Stoppage Alert*
Vehicle has been stopped at {location} for {duration}.
Please select reason for stoppage or provide details.`,
            
            routeDeviation: `тЪая╕П *Route Deviation Alert*
Vehicle has deviated from planned route.
Current Location: {location}
Distance from route: {deviationDistance} km
Please explain the reason for deviation.`,
            
            diversion: {
                initial: `тЪая╕П *Route Change Alert*
Vehicle has deviated from planned route.
Current Location: {location}
Distance from route: {deviationDistance} km

Is cargo being unloaded at this location?`,
                unloadingQuery: `ЁЯУж *Unloading Confirmation*
Please indicate who authorized the unloading:
1. Consignee
2. Transporter
3. Other (Please specify)`,
                unloadingPointsQuery: "How many locations are you unloading at?",
                locationDetailsPrompt: `Please provide details for unloading point #{pointNumber}:
1. Share location
2. Enter number of bags unloaded`,
                locationReceived: "ЁЯУН Location received: {address}\nLatitude: {latitude}\nLongitude: {longitude}",
                bagsPrompt: "Enter the number of bags unloaded at this location:",
                unloadingSuccess: "тЬЕ Unloading details successfully recorded for {numPoints} locations.",
                epodPrompt: "Please proceed with ePOD upload and OTP verification.",
                normalDeviation: `Please select the reason for deviation:
1. Traffic Jam
2. Road Block
3. Police Checkpost
4. Vehicle Issue
5. Other (Please specify)`,
                approachingDelivery50KM: `ЁЯУН *Near Delivery Point*
You are now 50 km away from the delivery location.
Current Location: {location}
Estimated Time of Arrival: {eta}
Delivery Location: {destination}

Please prepare for unloading at destination.`,
                epodOtpFlow: `ЁЯУж *Delivery Confirmation Required*
You have reached the delivery location.
Please complete the following steps to confirm delivery:
1. Upload ePOD document
2. Enter OTP received from consignee`,
                deliveryCompleted: 'Trip completed successfully! Thank you for using our service. ЁЯОЙ',
                returnToRoute: 'Please return to the planned route as soon as possible.'
            },
            
            continuousDriving: `тЪая╕П *Continuous Driving Alert*
Driver has been driving for {duration} hours without proper rest.
Current Location: {location}
Please ensure mandatory rest break.`,
            
            nightDriving: `тЪая╕П *Night Driving Alert*
Vehicle is operating during restricted night hours ({time}).
Current Location: {location}
Please confirm if night driving permission is obtained.`,
            
            overSpeeding: `ЁЯЪи *Over Speeding Alert*
Vehicle Speed: {speed} km/h
Speed Limit: {speedLimit} km/h
Location: {location}
Please advise driver to maintain speed limit.`
        }
    },
    hi: {
        welcome: 'рдлреНрд░реЗрдЯ рдЯрд╛рдЗрдЧрд░ рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ! ЁЯЪЫ',
        selectLanguage: 'рдХреГрдкрдпрд╛ рдЕрдкрдиреА рдкрд╕рдВрджреАрджрд╛ рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ:',
        languageSet: 'рднрд╛рд╖рд╛ рд╣рд┐рдВрджреА рдореЗрдВ рд╕реЗрдЯ рдХреА рдЧрдИ рд╣реИ',
        consentRequest: 'рдХреНрдпрд╛ рдЖрдк рдЕрдкрдирд╛ рд╕реНрдерд╛рди рдФрд░ рдпрд╛рддреНрд░рд╛ рд╡рд┐рд╡рд░рдг рд╕рд╛рдЭрд╛ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рд╕рд╣рдордд рд╣реИрдВ?',
        consentAccepted: 'рдЖрдкрдХреА рд╕рд╣рдорддрд┐ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рджред рдЖрдкрдХреА рдпрд╛рддреНрд░рд╛ рдЬрд▓реНрдж рд╣реА рд╢реБрд░реВ рд╣реЛрдЧреАред',
        consentRejected: 'рдЬрд╛рд░реА рд░рдЦрдиреЗ рдХреЗ рд▓рд┐рдП рдЖрдкрдХреЛ рд╕рд╣рдорддрд┐ рджреЗрдиреА рд╣реЛрдЧреАред рдХреНрдпрд╛ рдЖрдк рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░рдирд╛ рдЪрд╛рд╣рддреЗ рд╣реИрдВ?',
        tripCreated: `ЁЯЪЪ *рдирдИ рдпрд╛рддреНрд░рд╛ рдмрдирд╛рдИ рдЧрдИ рд╣реИ*
рдЪрд╛рд▓рдХ: {driverName}
рд╡рд╛рд╣рди: {vehicleNumber}
рд╕реЗ: {origin}
рддрдХ: {destination}
    
рдХреГрдкрдпрд╛ рдЕрдкрдиреА рдкрд╕рдВрджреАрджрд╛ рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВред`,
        tripStarted: `
ЁЯУж *рдпрд╛рддреНрд░рд╛ рд╢реБрд░реВ рдХреА рдЧрдИ*
рдпрд╛рддреНрд░рд╛ рдЖрдИрдбреА: {tripId}
ЁЯСд рдЪрд╛рд▓рдХ: {driverName}
ЁЯЪЫ рд╡рд╛рд╣рди: {vehicleNumber}
ЁЯУН рд╕реЗ: {origin}
ЁЯОп рддрдХ: {destination}
тП▒я╕П рдЕрдиреБрдорд╛рдирд┐рдд рд╕рдордп: {eta}`,
        tripInProgress: "ЁЯЪЪ рд╡рд╛рд╣рди рд╡рд░реНрддрдорд╛рди рдореЗрдВ {location} рдкрд░ рд╣реИ, {speed} рдХрд┐рдореА/рдШрдВрдЯрд╛ рдХреА рдЧрддрд┐ рд╕реЗ рдЪрд▓ рд░рд╣рд╛ рд╣реИред рдЕрдиреБрдорд╛рдирд┐рдд рд╕рдордп: {eta}",
        longStoppage: `тЪая╕П *рд▓рдВрдмреЗ рд╕рдордп рддрдХ рд░реБрдХрдиреЗ рдХреА рдЪреЗрддрд╛рд╡рдиреА*
рд╡рд╛рд╣рди {location} рдкрд░ {duration} рдХреЗ рд▓рд┐рдП рд░реБрдХрд╛ рд╣реБрдЖ рд╣реИред
рдХреГрдкрдпрд╛ рд░реБрдХрдиреЗ рдХрд╛ рдХрд╛рд░рдг рдЪреБрдиреЗрдВ рдпрд╛ рд╡рд┐рд╡рд░рдг рдкреНрд░рджрд╛рди рдХрд░реЗрдВред`,
        approachingDelivery: `
ЁЯУН *рдбрд┐рд▓реАрд╡рд░реА рдкреЙрдЗрдВрдЯ рдХреЗ рдкрд╛рд╕*
рд╢реЗрд╖ рджреВрд░реА: {distance} рдХрд┐рдореА
рдЕрдиреБрдорд╛рдирд┐рдд рд╕рдордп: {eta}
рдбрд┐рд▓реАрд╡рд░реА рд╕реНрдерд╛рди: {destination}`,
        uploadEpod: 'рдХреГрдкрдпрд╛ ePOD рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВред',
        enterOtp: 'рдХреГрдкрдпрд╛ рдкреНрд░рд╛рдкреНрдд OTP рджрд░реНрдЬ рдХрд░реЗрдВ:',
        tripCompleted: `тЬЕ *рдбрд┐рд▓реАрд╡рд░реА рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдкреВрд░реА рд╣реБрдИ*
рдбрд┐рд▓реАрд╡рд░реА рдкреВрд░реА рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рджред
рдпрд╛рддреНрд░рд╛ рдЖрдИрдбреА: {tripId}
рдЧрдВрддрд╡реНрдп: {destination}
рдбрд┐рд▓реАрд╡рд░реА рдкреБрд╖реНрдЯрд┐ рд╕реНрдерд╛рди: {location}

рдпрд╛рддреНрд░рд╛ рдЕрдм рдкреВрд░реНрдг рд╣реЛ рдЧрдИ рд╣реИред`,
        diversionAlert: `тЪая╕П *рдорд╛рд░реНрдЧ рдкрд░рд┐рд╡рд░реНрддрди рдЪреЗрддрд╛рд╡рдиреА*
рд╡рд╛рд╣рди рдирд┐рд░реНрдзрд╛рд░рд┐рдд рдорд╛рд░реНрдЧ рд╕реЗ рд╡рд┐рдЪрд▓рд┐рдд рд╣реЛ рдЧрдпрд╛ рд╣реИред
рд╡рд░реНрддрдорд╛рди рд╕реНрдерд╛рди: {location}
рдорд╛рд░реНрдЧ рд╕реЗ рджреВрд░реА: {deviationDistance} рдХрд┐рдореА

рдХреНрдпрд╛ рдЗрд╕ рд╕реНрдерд╛рди рдкрд░ рдорд╛рд▓ рдЙрддрд╛рд░рд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИ?`,
        epodUploading: 'ePOD рджрд╕реНрддрд╛рд╡реЗрдЬрд╝ рдЕрдкрд▓реЛрдб рд╣реЛ рд░рд╣рд╛ рд╣реИ... рдХреГрдкрдпрд╛ рдкреНрд░рддреАрдХреНрд╖рд╛ рдХрд░реЗрдВред',
        epodUploaded: 'рдИрдкреАрдУрдбреА рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдЕрдкрд▓реЛрдб рд╣реЛ рдЧрдпрд╛! тЬЕ',
        otpVerified: 'OTP рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рд╕рддреНрдпрд╛рдкрд┐рдд! рдЖрдкрдХреА рдбрд┐рд▓реАрд╡рд░реА рдХреА рдкреБрд╖реНрдЯрд┐ рд╣реЛ рдЧрдИ рд╣реИред тЬЕ',
        selected: 'рдЖрдкрдиреЗ рдЪреБрдирд╛: {option}',
        deviationReasonRecorded: 'рд╡рд┐рдЪрд▓рди рдХрд╛рд░рдг рджрд░реНрдЬ рдХрд┐рдпрд╛ рдЧрдпрд╛: {reason}',
        returnToRoute: 'рдХреГрдкрдпрд╛ рдЬрд▓реНрдж рд╕реЗ рдЬрд▓реНрдж рдирд┐рдпреЛрдЬрд┐рдд рдорд╛рд░реНрдЧ рдкрд░ рд╡рд╛рдкрд╕ рдЖрдПрдВред',
        processingUnloading: '{numPoints} рд╕реНрдерд╛рди(рдУрдВ) рдкрд░ рд╕рд╛рдорд╛рди рдЙрддрд╛рд░рдиреЗ рдХреА рдкреНрд░рдХреНрд░рд┐рдпрд╛ рдЬрд╛рд░реА рд╣реИред',
        invalidAuthorizationOption: 'рдЕрдорд╛рдиреНрдп рдкреНрд░рд╛рдзрд┐рдХрд░рдг рд╡рд┐рдХрд▓реНрдкред рдХреГрдкрдпрд╛ рдПрдХ рд╡реИрдз рд╡рд┐рдХрд▓реНрдк рдЪреБрдиреЗрдВред',
        recordedBags: 'тЬЕ рдЗрд╕ рд╕реНрдерд╛рди рдкрд░ {numBags} рдмреИрдЧ рджрд░реНрдЬ рдХрд┐рдП рдЧрдПред',
        noUnloadingPointsRecorded: 'рдХреЛрдИ рдЕрдирд▓реЛрдбрд┐рдВрдЧ рдкреЙрдЗрдВрдЯ рджрд░реНрдЬ рдирд╣реАрдВ рдХрд┐рдпрд╛ рдЧрдпрд╛ред рдХреГрдкрдпрд╛ рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред',
        buttons: {
            accept: 'Accept',
            decline: 'Decline',
            confirm: 'Confirm',
            update: 'Update',
            report: 'Report'
        },
        stoppageReasons: [
            'Lunch Break',
            'Vehicle Maintenance',
            'Traffic',
            'Rest Stop',
            'Other'
        ],
        deviationReasons: [
            'Traffic Congestion',
            'Road Construction',
            'Accident on Route',
            'Police Checkpost',
            'Weather Conditions',
            'Other'
        ],
        consentApproved: "тЬЕ рдЖрдкрдХреА рд╕рд╣рдорддрд┐ рдХреЛ рдордВрдЬреВрд░реА рджреЗ рджреА рдЧрдИ рд╣реИред рдпрд╛рддреНрд░рд╛ рдЯреНрд░реИрдХрд┐рдВрдЧ рд╢реБрд░реВ рд╣реЛ рд░рд╣реА рд╣реИ...",
        consentPending: "тП│ рдЖрдкрдХреА рд╕рд╣рдорддрд┐ рдЕрдиреБрдореЛрджрди рдХреЗ рд▓рд┐рдП рд▓рдВрдмрд┐рдд рд╣реИред",
        waitForApproval: "рдХреГрдкрдпрд╛ рдЕрдкрдиреА рд╕рд╣рдорддрд┐ рдХреЗ рдкреНрд░рд╕рдВрд╕реНрдХрд░рдг рдХреЗ рджреМрд░рд╛рди рдкреНрд░рддреАрдХреНрд╖рд╛ рдХрд░реЗрдВред рдЗрд╕рдореЗрдВ рдХреБрдЫ рдорд┐рдирдЯ рд▓рдЧ рд╕рдХрддреЗ рд╣реИрдВред",
        consentRejected: "тЭМ рдЖрдкрдХреА рд╕рд╣рдорддрд┐ рдЕрд╕реНрд╡реАрдХрд╛рд░ рдХрд░ рджреА рдЧрдИ рд╣реИред",
        requestResendConsent: "рдирдпрд╛ рд╕рд╣рдорддрд┐ рд╕рдВрджреЗрд╢ рдЕрдиреБрд░реЛрдз рдХрд░реЗрдВ",
        consentResendRequested: "тЬЙя╕П рд╣рдордиреЗ рд╕рд╣рдорддрд┐ рд╕рдВрджреЗрд╢ рдХреЛ рдлрд┐рд░ рд╕реЗ рднреЗрдЬрдиреЗ рдХрд╛ рдЕрдиреБрд░реЛрдз рдХрд┐рдпрд╛ рд╣реИред",
        waitForNewConsent: "рдЖрдкрдХреЛ рдЬрд▓реНрдж рд╣реА рдПрдХ рдирдпрд╛ рд╕рд╣рдорддрд┐ рд╕рдВрджреЗрд╢ рдкреНрд░рд╛рдкреНрдд рд╣реЛрдЧрд╛ред рдХреГрдкрдпрд╛ рдЕрдкрдиреЗ WhatsApp рд╕рдВрджреЗрд╢реЛрдВ рдХреА рдЬрд╛рдВрдЪ рдХрд░реЗрдВред",
        consentResendError: "тЪая╕П рдирдпрд╛ рд╕рд╣рдорддрд┐ рд╕рдВрджреЗрд╢ рдЕрдиреБрд░реЛрдз рдХрд░рдиреЗ рдореЗрдВ рдЕрд╕рдорд░реНрдеред рдХреГрдкрдпрд╛ рдмрд╛рдж рдореЗрдВ рдкреБрдирдГ рдкреНрд░рдпрд╛рд╕ рдХрд░реЗрдВред",
        waitForConsentApproval: "рд╕рд╣рдорддрд┐ рдЕрдиреБрдореЛрджрди рд╕рдВрджреЗрд╢ рдкреНрд░рд╛рдкреНрдд рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдХреГрдкрдпрд╛ рдХреБрдЫ рд╕рдордп рдкреНрд░рддреАрдХреНрд╖рд╛ рдХрд░реЗрдВ рдФрд░ рдЙрд╕ рд╕рдВрджреЗрд╢ рдХреЛ рд╕рд╣рдорддрд┐ рджреЗрдВред",
        diversionProcessHelp: "рдХреГрдкрдпрд╛ рдорд╛рд░реНрдЧ рдкрд░рд┐рд╡рд░реНрддрди рдкреНрд░рдХреНрд░рд┐рдпрд╛ рдЬрд╛рд░реА рд░рдЦреЗрдВ рдпрд╛ рд╕рд╣рд╛рдпрддрд╛ рдХреЗ рд▓рд┐рдП 'help' рдЯрд╛рдЗрдк рдХрд░реЗрдВред",
        alerts: {
            longStoppage: `тЪая╕П *рд▓рдВрдмреЗ рд╕рдордп рддрдХ рд░реБрдХрдиреЗ рдХреА рдЪреЗрддрд╛рд╡рдиреА*
рд╡рд╛рд╣рди {location} рдкрд░ {duration} рдХреЗ рд▓рд┐рдП рд░реБрдХрд╛ рд╣реБрдЖ рд╣реИред
рдХреГрдкрдпрд╛ рд░реБрдХрдиреЗ рдХрд╛ рдХрд╛рд░рдг рдЪреБрдиреЗрдВ рдпрд╛ рд╡рд┐рд╡рд░рдг рдкреНрд░рджрд╛рди рдХрд░реЗрдВред`,
            
            routeDeviation: `тЪая╕П *рдорд╛рд░реНрдЧ рд╡рд┐рдЪрд▓рди рдЪреЗрддрд╛рд╡рдиреА*
рд╡рд╛рд╣рди рдирд┐рд░реНрдзрд╛рд░рд┐рдд рдорд╛рд░реНрдЧ рд╕реЗ рд╡рд┐рдЪрд▓рд┐рдд рд╣реЛ рдЧрдпрд╛ рд╣реИред
рд╡рд░реНрддрдорд╛рди рд╕реНрдерд╛рди: {location}
рдорд╛рд░реНрдЧ рд╕реЗ рджреВрд░реА: {deviationDistance} рдХрд┐рдореА
рдХреГрдкрдпрд╛ рд╡рд┐рдЪрд▓рди рдХрд╛ рдХрд╛рд░рдг рдмрддрд╛рдПрдВред`,
            
            diversion: {
                initial: `тЪая╕П *рдорд╛рд░реНрдЧ рдкрд░рд┐рд╡рд░реНрддрди рдЪреЗрддрд╛рд╡рдиреА*
рд╡рд╛рд╣рди рдирд┐рд░реНрдзрд╛рд░рд┐рдд рдорд╛рд░реНрдЧ рд╕реЗ рд╡рд┐рдЪрд▓рд┐рдд рд╣реЛ рдЧрдпрд╛ рд╣реИред
рд╡рд░реНрддрдорд╛рди рд╕реНрдерд╛рди: {location}
рдорд╛рд░реНрдЧ рд╕реЗ рджреВрд░реА: {deviationDistance} рдХрд┐рдореА

рдХреНрдпрд╛ рдЗрд╕ рд╕реНрдерд╛рди рдкрд░ рдорд╛рд▓ рдЙрддрд╛рд░рд╛ рдЬрд╛ рд░рд╣рд╛ рд╣реИ?`,
                unloadingQuery: `ЁЯУж *рдЕрдирд▓реЛрдбрд┐рдВрдЧ рдкреБрд╖реНрдЯрд┐рдХрд░рдг*
рдХреГрдкрдпрд╛ рдмрддрд╛рдПрдВ рдХрд┐ рдХрд┐рд╕рдиреЗ рдЕрдирд▓реЛрдбрд┐рдВрдЧ рдХреЗ рд▓рд┐рдП рдЕрдзрд┐рдХреГрдд рдХрд┐рдпрд╛:
1. рдХрдВрд╕рд╛рдЗрдиреА
2. рдЯреНрд░рд╛рдВрд╕рдкреЛрд░реНрдЯрд░
3. рдЕрдиреНрдп (рдХреГрдкрдпрд╛ рд╕реНрдкрд╖реНрдЯ рдХрд░реЗрдВ)`,
                unloadingPointsQuery: "рдЖрдк рдХрд┐рддрдиреЗ рд╕реНрдерд╛рдиреЛрдВ рдкрд░ рдорд╛рд▓ рдЙрддрд╛рд░ рд░рд╣реЗ рд╣реИрдВ?",
                locationDetailsPrompt: `рдХреГрдкрдпрд╛ рдЕрдирд▓реЛрдбрд┐рдВрдЧ рдкреЙрдЗрдВрдЯ #{pointNumber} рдХреЗ рд▓рд┐рдП рд╡рд┐рд╡рд░рдг рдкреНрд░рджрд╛рди рдХрд░реЗрдВ:
1. рд╕реНрдерд╛рди рд╕рд╛рдЭрд╛ рдХрд░реЗрдВ
2. рдЙрддрд╛рд░реЗ рдЧрдП рдмреИрдЧ рдХреА рд╕рдВрдЦреНрдпрд╛ рджрд░реНрдЬ рдХрд░реЗрдВ`,
                locationReceived: "ЁЯУН рд╕реНрдерд╛рди рдкреНрд░рд╛рдкреНрдд: {address}\nрдЕрдХреНрд╖рд╛рдВрд╢: {latitude}\nрджреЗрд╢рд╛рдВрддрд░: {longitude}",
                bagsPrompt: "рдЗрд╕ рд╕реНрдерд╛рди рдкрд░ рдЙрддрд╛рд░реЗ рдЧрдП рдмреИрдЧ рдХреА рд╕рдВрдЦреНрдпрд╛ рджрд░реНрдЬ рдХрд░реЗрдВ:",
                unloadingSuccess: "тЬЕ {numPoints} рд╕реНрдерд╛рдиреЛрдВ рдХреЗ рд▓рд┐рдП рдЕрдирд▓реЛрдбрд┐рдВрдЧ рд╡рд┐рд╡рд░рдг рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рджрд░реНрдЬ рдХрд┐рдпрд╛ рдЧрдпрд╛ред",
                epodPrompt: "рдХреГрдкрдпрд╛ рдИрдкреАрдУрдбреА рдЕрдкрд▓реЛрдб рдФрд░ рдУрдЯреАрдкреА рд╕рддреНрдпрд╛рдкрди рдХреЗ рд╕рд╛рде рдЖрдЧреЗ рдмрдврд╝реЗрдВред",
                normalDeviation: `рдХреГрдкрдпрд╛ рд╡рд┐рдЪрд▓рди рдХрд╛ рдХрд╛рд░рдг рдЪреБрдиреЗрдВ:
1. рдЯреНрд░реИрдлрд┐рдХ рдЬрд╛рдо
2. рд╕рдбрд╝рдХ рдЕрд╡рд░реЛрдз
3. рдкреБрд▓рд┐рд╕ рдЪреМрдХреА
4. рд╡рд╛рд╣рди рд╕рдорд╕реНрдпрд╛
5. рдЕрдиреНрдп (рдХреГрдкрдпрд╛ рд╕реНрдкрд╖реНрдЯ рдХрд░реЗрдВ)`,
                approachingDelivery50KM: `ЁЯУН *рдбрд┐рд▓реАрд╡рд░реА рдкреЙрдЗрдВрдЯ рдХреЗ рдкрд╛рд╕*
рдЖрдк рдЕрдм рдбрд┐рд▓реАрд╡рд░реА рд╕реНрдерд╛рди рд╕реЗ 50 рдХрд┐рдореА рджреВрд░ рд╣реИрдВред
рд╡рд░реНрддрдорд╛рди рд╕реНрдерд╛рди: {location}
рдЕрдиреБрдорд╛рдирд┐рдд рдкрд╣реБрдВрдЪрдиреЗ рдХрд╛ рд╕рдордп: {eta}
рдбрд┐рд▓реАрд╡рд░реА рд╕реНрдерд╛рди: {destination}

рдХреГрдкрдпрд╛ рдЧрдВрддрд╡реНрдп рдкрд░ рдЙрддрд░рд╛рдИ рдХреА рддреИрдпрд╛рд░реА рдХрд░реЗрдВред`,
                epodOtpFlow: `ЁЯУж *рдбрд┐рд▓реАрд╡рд░реА рдкреБрд╖реНрдЯрд┐рдХрд░рдг рдЖрд╡рд╢реНрдпрдХ*
рдЖрдк рдбрд┐рд▓реАрд╡рд░реА рд╕реНрдерд╛рди рдкрд░ рдкрд╣реБрдВрдЪ рдЧрдП рд╣реИрдВред
рдХреГрдкрдпрд╛ рдбрд┐рд▓реАрд╡рд░реА рдХреА рдкреБрд╖реНрдЯрд┐ рдХреЗ рд▓рд┐рдП рдирд┐рдореНрдирд▓рд┐рдЦрд┐рдд рдЪрд░рдгреЛрдВ рдХреЛ рдкреВрд░рд╛ рдХрд░реЗрдВ:
1. рдИрдкреАрдУрдбреА рджрд╕реНрддрд╛рд╡реЗрдЬ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ
2. рдХрдВрд╕рд╛рдЗрдиреА рд╕реЗ рдкреНрд░рд╛рдкреНрдд рдУрдЯреАрдкреА рджрд░реНрдЬ рдХрд░реЗрдВ`,
                deliveryCompleted: 'рдпрд╛рддреНрд░рд╛ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдкреВрд░реА рд╣реБрдИ! рд╣рдорд╛рд░реА рд╕реЗрд╡рд╛ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдзрдиреНрдпрд╡рд╛рджред ЁЯОЙ',
                returnToRoute: 'рдХреГрдкрдпрд╛ рдЬрд▓реНрдж рд╕реЗ рдЬрд▓реНрдж рдирд┐рдпреЛрдЬрд┐рдд рдорд╛рд░реНрдЧ рдкрд░ рд╡рд╛рдкрд╕ рдЖрдПрдВред'
            },
            
            continuousDriving: `тЪая╕П *рд▓рдЧрд╛рддрд╛рд░ рдбреНрд░рд╛рдЗрд╡рд┐рдВрдЧ рдЪреЗрддрд╛рд╡рдиреА*
рдЪрд╛рд▓рдХ рдЙрдЪрд┐рдд рдЖрд░рд╛рдо рдХреЗ рдмрд┐рдирд╛ {duration} рдШрдВрдЯреЗ рд╕реЗ рдбреНрд░рд╛рдЗрд╡ рдХрд░ рд░рд╣рд╛ рд╣реИред
рд╡рд░реНрддрдорд╛рди рд╕реНрдерд╛рди: {location}
рдХреГрдкрдпрд╛ рдЕрдирд┐рд╡рд╛рд░реНрдп рдЖрд░рд╛рдо рдмреНрд░реЗрдХ рд╕реБрдирд┐рд╢реНрдЪрд┐рдд рдХрд░реЗрдВред`,
            
            nightDriving: `тЪая╕П *рд░рд╛рддреНрд░рд┐ рдбреНрд░рд╛рдЗрд╡рд┐рдВрдЧ рдЪреЗрддрд╛рд╡рдиреА*
рд╡рд╛рд╣рди рдкреНрд░рддрд┐рдмрдВрдзрд┐рдд рд░рд╛рддреНрд░рд┐ рдШрдВрдЯреЛрдВ ({time}) рдХреЗ рджреМрд░рд╛рди рдЪрд▓ рд░рд╣рд╛ рд╣реИред
рд╡рд░реНрддрдорд╛рди рд╕реНрдерд╛рди: {location}
рдХреГрдкрдпрд╛ рдкреБрд╖реНрдЯрд┐ рдХрд░реЗрдВ рдХрд┐ рдХреНрдпрд╛ рд░рд╛рддреНрд░рд┐ рдбреНрд░рд╛рдЗрд╡рд┐рдВрдЧ рдХреА рдЕрдиреБрдорддрд┐ рдкреНрд░рд╛рдкреНрдд рд╣реИред`,
            
            overSpeeding: `ЁЯЪи *рдЕрдзрд┐рдХ рдЧрддрд┐ рдЪреЗрддрд╛рд╡рдиреА*
рд╡рд╛рд╣рди рдХреА рдЧрддрд┐: {speed} рдХрд┐рдореА/рдШрдВрдЯрд╛
рдЧрддрд┐ рд╕реАрдорд╛: {speedLimit} рдХрд┐рдореА/рдШрдВрдЯрд╛
рд╕реНрдерд╛рди: {location}
рдХреГрдкрдпрд╛ рдЪрд╛рд▓рдХ рдХреЛ рдЧрддрд┐ рд╕реАрдорд╛ рдмрдирд╛рдП рд░рдЦрдиреЗ рдХреА рд╕рд▓рд╛рд╣ рджреЗрдВред`
        }
    },
    te: {
        welcome: 'р░лр▒Нр░░р▒Ир░Яр▒Н р░Яр▒Ир░Чр░░р▒НтАМр░Хр░┐ р░╕р▒Нр░╡р░╛р░Чр░др░В! ЁЯЪЫ',
        selectLanguage: 'р░жр░пр░Ър▒Зр░╕р░┐ р░ор▒А р░кр▒Нр░░р░╛р░зр░╛р░ир▒Нр░п р░нр░╛р░╖р░ир▒Б р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐:',
        languageSet: 'р░нр░╛р░╖ р░др▒Жр░▓р▒Бр░Чр▒Бр░Хр░┐ р░╕р▒Жр░Яр▒Н р░Ър▒Зр░пр░мр░бр░┐р░Вр░жр░┐',
        consentRequest: 'р░ор▒А р░╕р▒Нр░ер░╛р░ир░В р░ор░░р░┐р░пр▒Б р░кр▒Нр░░р░пр░╛р░г р░╡р░┐р░╡р░░р░╛р░▓р░ир▒Б р░кр░Вр░Ър▒Бр░Хр▒Лр░╡р░бр░╛р░ир░┐р░Хр░┐ р░ор▒Ар░░р▒Б р░Ер░Вр░Чр▒Ар░Хр░░р░┐р░╕р▒Нр░др▒Бр░ир▒Нр░ир░╛р░░р░╛?',
        consentAccepted: 'р░ор▒А р░Ер░Вр░Чр▒Ар░Хр░╛р░░р░╛р░ир░┐р░Хр░┐ р░зр░ир▒Нр░пр░╡р░╛р░жр░╛р░▓р▒Б. р░ор▒А р░кр▒Нр░░р░пр░╛р░гр░В р░др▒Нр░╡р░░р░▓р▒Л р░кр▒Нр░░р░╛р░░р░Вр░нр░ор░╡р▒Бр░др▒Бр░Вр░жр░┐.',
        consentRejected: 'р░Хр▒Кр░ир░╕р░╛р░Чр░┐р░Вр░Ър░бр░╛р░ир░┐р░Хр░┐ р░ор▒Ар░░р▒Б р░Ер░Вр░Чр▒Ар░Хр░╛р░░р░В р░Зр░╡р▒Нр░╡р░╛р░▓р░┐. р░ор░│р▒Нр░▓р▒А р░кр▒Нр░░р░пр░др▒Нр░ир░┐р░Вр░Ър░╛р░▓р░ир▒Бр░Хр▒Бр░Вр░Яр▒Бр░ир▒Нр░ир░╛р░░р░╛?',
        tripCreated: `
ЁЯЪЪ *р░Хр▒Кр░др▒Нр░д р░кр▒Нр░░р░пр░╛р░гр░В р░╕р▒Гр░╖р▒Нр░Яр░┐р░Вр░Ър░мр░бр░┐р░Вр░жр░┐*
р░кр▒Нр░░р░пр░╛р░г ID: {tripId}
р░бр▒Нр░░р▒Ир░╡р░░р▒Н: {driverName}
р░╡р░╛р░╣р░ир░В: {vehicleNumber}
р░ир▒Бр░Вр░бр░┐: {origin}
р░╡р░░р░Хр▒Б: {destination}
  
р░жр░пр░Ър▒Зр░╕р░┐ р░ор▒А р░Ер░нр░┐р░ор░д р░нр░╛р░╖р░ир▒Б р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐.`,
        tripStarted: `
ЁЯУж *р░кр▒Нр░░р░пр░╛р░гр░В р░кр▒Нр░░р░╛р░░р░Вр░нр░ор▒Ир░Вр░жр░┐*
р░кр▒Нр░░р░пр░╛р░г ID: {tripId}
ЁЯСд р░бр▒Нр░░р▒Ир░╡р░░р▒Н: {driverName}
ЁЯЪЫ р░╡р░╛р░╣р░ир░В: {vehicleNumber}
ЁЯУН р░ир▒Бр░Вр░бр░┐: {origin}
ЁЯОп р░╡р░░р░Хр▒Б: {destination}
тП▒я╕П р░Ер░Вр░Ър░ир░╛ р░╕р░ор░пр░В: {eta}`,
        tripInProgress: "ЁЯЪЪ р░╡р░╛р░╣р░ир░В р░кр▒Нр░░р░╕р▒Нр░др▒Бр░др░В {location} р░╡р░жр▒Нр░ж р░Йр░Вр░жр░┐, {speed} р░Хр░┐.р░ор▒А/р░Чр░Вр░Я р░╡р▒Зр░Чр░Вр░др▒Л р░Хр░жр▒Бр░▓р▒Бр░др▒Лр░Вр░жр░┐. р░Ер░Вр░Ър░ир░╛ р░╕р░ор░пр░В: {eta}",
        longStoppage: `тЪая╕П *р░жр▒Ар░░р▒Нр░Шр░Хр░╛р░▓р░┐р░Х р░Жр░Чр░┐р░кр▒Лр░╡р░бр░В р░Ер░▓р░░р▒Нр░Яр▒Н*
р░╡р░╛р░╣р░ир░В {location} р░╡р░жр▒Нр░ж {duration} р░ир▒Бр░Вр░бр░┐ р░Жр░Чр░┐ р░Йр░Вр░жр░┐.
р░жр░пр░Ър▒Зр░╕р░┐ р░Жр░Чр░┐р░кр▒Лр░╡р░бр░╛р░ир░┐р░Хр░┐ р░Хр░╛р░░р░гр░╛р░ир▒Нр░ир░┐ р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐ р░▓р▒Зр░жр░╛ р░╡р░┐р░╡р░░р░г р░Зр░╡р▒Нр░╡р░Вр░бр░┐.`,
        approachingDelivery: `
ЁЯУН *р░бр▒Жр░▓р░┐р░╡р░░р▒А р░кр░╛р░пр░┐р░Вр░Яр▒НтАМр░Хр░┐ р░Ър▒Зр░░р▒Бр░Хр▒Бр░Вр░Яр▒Бр░ир▒Нр░ир░╛р░░р▒Б*
р░ор░┐р░Чр░┐р░▓р░┐р░и р░жр▒Вр░░р░В: {distance} р░Хр░┐.р░ор▒А
р░Ер░Вр░Ър░ир░╛ р░╕р░ор░пр░В: {eta}
р░бр▒Жр░▓р░┐р░╡р░░р▒А р░╕р▒Нр░ер░╛р░ир░В: {destination}`,
        uploadEpod: 'р░жр░пр░Ър▒Зр░╕р░┐ ePOD р░кр░др▒Нр░░р░╛р░ир▒Нр░ир░┐ р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐.',
        enterOtp: 'р░жр░пр░Ър▒Зр░╕р░┐ р░Ер░Вр░жр▒Бр░Хр▒Бр░ир▒Нр░и OTPр░ир░┐ р░ир░ор▒Лр░жр▒Б р░Ър▒Зр░пр░Вр░бр░┐:',
        tripCompleted: `тЬЕ *р░бр▒Жр░▓р░┐р░╡р░░р▒А р░╡р░┐р░Ьр░пр░╡р░Вр░др░Вр░Чр░╛ р░кр▒Вр░░р▒Нр░др░пр░┐р░Вр░жр░┐*
р░бр▒Жр░▓р░┐р░╡р░░р▒Ар░ир░┐ р░кр▒Вр░░р▒Нр░др░┐ р░Ър▒Зр░╕р░┐р░ир░Вр░жр▒Бр░Хр▒Б р░зр░ир▒Нр░пр░╡р░╛р░жр░╛р░▓р▒Б.
р░кр▒Нр░░р░пр░╛р░гр░В ID: {tripId}
р░Чр░ор▒Нр░пр░╕р▒Нр░ер░╛р░ир░В: {destination}
р░бр▒Жр░▓р░┐р░╡р░░р▒А р░ир░┐р░░р▒Нр░зр░╛р░░р░г р░╕р▒Нр░ер░╛р░ир░В: {location}

р░кр▒Нр░░р░пр░╛р░гр░В р░Зр░кр▒Нр░кр▒Бр░бр▒Б р░кр▒Вр░░р▒Нр░др░┐ р░Ър▒Зр░пр░мр░бр░┐р░Вр░жр░┐.`,
        diversionAlert: `тЪая╕П *р░ор░╛р░░р▒Нр░Чр░ор░╛р░░р▒Нр░кр▒Б р░Ер░▓р░░р▒Нр░Яр▒Н*
р░╡р░╛р░╣р░ир░В р░кр▒Нр░░р░др▒Нр░пр░╛р░ор▒Нр░ир░╛р░п р░ор░╛р░░р▒Нр░Чр░╛р░ир▒Нр░ир░┐ р░др▒Ар░╕р▒Бр░Хр▒Бр░Вр░Яр▒Лр░Вр░жр░┐.
р░кр▒Нр░░р░╕р▒Нр░др▒Бр░д р░╕р▒Нр░ер░╛р░ир░В: {location}
р░Хр▒Кр░др▒Нр░д р░Ер░Вр░Ър░ир░╛ р░╕р░ор░пр░В: {eta}
р░жр░пр░Ър▒Зр░╕р░┐ р░И р░ор░╛р░░р▒Нр░Чр░ор░╛р░░р▒Нр░кр▒Б р░Ер░зр░┐р░Хр░╛р░░р░┐р░Хр░Вр░Чр░╛ р░Ер░ир▒Бр░ор░др░┐р░Вр░Ър░мр░бр░┐р░Вр░жр▒Л р░ир░┐р░░р▒Нр░зр░╛р░░р░┐р░Вр░Ър░Вр░бр░┐.`,
        epodUploading: 'ePOD р░Ер░кр▒Нр░▓р▒Лр░бр▒Н р░Ер░╡р▒Бр░др▒Лр░Вр░жр░┐... р░жр░пр░Ър▒Зр░╕р░┐ р░╡р▒Зр░Ър░┐ р░Йр░Вр░бр░Вр░бр░┐.',
        epodUploaded: 'ePOD р░Ер░кр▒Нр░▓р▒Лр░бр░┐р░Вр░Ър░мр░бр░┐р░Вр░жр░┐! тЬЕ',
        otpVerified: 'OTP р░╕р░лр░▓р░Вр░Чр░╛ р░зр▒Гр░╡р▒Ар░Хр░░р░┐р░Вр░Ър░мр░бр░┐р░Вр░жр░┐! р░ор▒А р░бр▒Жр░▓р░┐р░╡р░░р▒А р░╕р░лр░▓р░Вр░Чр░╛ р░зр▒Гр░╡р▒Ар░Хр░░р░┐р░Вр░Ър░мр░бр░┐р░Вр░жр░┐. тЬЕ',
        selected: 'р░ор▒Ар░░р▒Б р░Ор░Вр░Ър▒Бр░Хр▒Лр░ир▒Нр░ир░╛р░░р▒Б: {option}',
        deviationReasonRecorded: 'р░ор░╛р░░р▒Нр░Ч р░╡р░┐р░Ър░▓р░и р░Хр░╛р░░р░гр░В р░ир░ор▒Лр░жр▒Б р░Ър▒Зр░пр░мр░бр░┐р░Вр░жр░┐: {reason}',
        returnToRoute: 'р░╡р▒Ар░▓р▒Ир░ир░Вр░д р░др▒Нр░╡р░░р░Чр░╛ р░кр▒Нр░░р░гр░╛р░│р░┐р░Хр░╛р░мр░жр▒Нр░з р░ор░╛р░░р▒Нр░Чр░╛р░ир░┐р░Хр░┐ р░др░┐р░░р░┐р░Чр░┐ р░░р░╛р░╡р░╛р░▓р░┐.',
        processingUnloading: '{numPoints} р░кр▒Нр░░р░╛р░Вр░др░╛р░▓р▒Нр░▓р▒Л р░ор▒Лр░╕р▒Бр░Хр▒Бр░╡р░Ър▒Нр░Ър░┐р░и р░╡р░╕р▒Нр░др▒Бр░╡р▒Бр░▓р▒Б р░жр░┐р░Вр░кр░бр░В р░кр▒Нр░░р░╛р░╕р▒Жр░╕р▒Н р░Ър▒Зр░╕р▒Нр░др▒Лр░Вр░жр░┐.',
        invalidAuthorizationOption: 'р░Ър▒Жр░▓р▒Нр░▓р░ир░┐ р░кр▒Нр░░р░╛р░ор░╛р░гр▒Ар░Хр░░р░г р░Ор░Вр░кр░┐р░Х. р░жр░пр░Ър▒Зр░╕р░┐ р░Ър▒Жр░▓р▒Нр░▓р▒Бр░мр░╛р░Яр▒Б р░Ер░пр▒Нр░пр▒З р░Ор░Вр░кр░┐р░Хр░ир▒Б р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐.',
        recordedBags: 'тЬЕ р░И р░кр▒Нр░░р░╛р░Вр░др░Вр░▓р▒Л {numBags} р░мр▒Нр░пр░╛р░Чр▒Бр░▓р▒Б р░ир░ор▒Лр░жр▒Б р░Ър▒Зр░пр░мр░бр▒Нр░бр░╛р░пр░┐.',
        noUnloadingPointsRecorded: 'р░Ер░ир▒НтАМр░▓р▒Лр░бр░┐р░Вр░Чр▒Н р░кр░╛р░пр░┐р░Вр░Яр▒Нр░▓р▒Б р░Пр░╡р▒А р░ир░ор▒Лр░жр▒Б р░Ър▒Зр░пр░мр░бр░▓р▒Зр░жр▒Б. р░жр░пр░Ър▒Зр░╕р░┐ р░ор░│р▒Нр░▓р▒А р░кр▒Нр░░р░пр░др▒Нр░ир░┐р░Вр░Ър░Вр░бр░┐.',
        buttons: {
            accept: 'р░Ер░Вр░Чр▒Ар░Хр░░р░┐р░Вр░Ър▒Б',
            decline: 'р░др░┐р░░р░╕р▒Нр░Хр░░р░┐р░Вр░Ър▒Б',
            confirm: 'р░ир░┐р░░р▒Нр░зр░╛р░░р░┐р░Вр░Ър▒Б',
            update: 'р░ир░╡р▒Ар░Хр░░р░┐р░Вр░Ър▒Б',
            report: 'р░ир░┐р░╡р▒Зр░жр░┐р░Вр░Ър▒Б'
        },
        stoppageReasons: [
            'р░нр▒Лр░Ьр░и р░╡р░┐р░░р░╛р░ор░В',
            'р░╡р░╛р░╣р░и р░ор░░р░ор▒Нр░ор░др▒Б',
            'р░Яр▒Нр░░р░╛р░лр░┐р░Хр▒Н',
            'р░╡р░┐р░╢р▒Нр░░р░╛р░Вр░др░┐',
            'р░Зр░др░░р░В'
        ],
        deviationReasons: [
            'р░Яр▒Нр░░р░╛р░лр░┐р░Хр▒Н р░░р░жр▒Нр░жр▒А',
            'р░░р▒Лр░бр▒Нр░бр▒Б р░ир░┐р░░р▒Нр░ор░╛р░гр░В',
            'р░ор░╛р░░р▒Нр░Чр░Вр░▓р▒Л р░кр▒Нр░░р░ор░╛р░жр░В',
            'р░кр▒Лр░▓р▒Ар░╕р▒Н р░Ър▒Жр░Хр▒НтАМр░кр▒Лр░╕р▒Нр░Яр▒Н',
            'р░╡р░╛р░др░╛р░╡р░░р░г р░кр░░р░┐р░╕р▒Нр░ер░┐р░др▒Бр░▓р▒Б',
            'р░Зр░др░░р░В'
        ],
        consentApproved: "тЬЕ р░ор▒А р░Ер░Вр░Чр▒Ар░Хр░╛р░░р░В р░Жр░ор▒Лр░жр░┐р░Вр░Ър░мр░бр░┐р░Вр░жр░┐. р░кр▒Нр░░р░пр░╛р░г р░Яр▒Нр░░р░╛р░Хр░┐р░Вр░Чр▒Н р░кр▒Нр░░р░╛р░░р░Вр░нр░ор░╡р▒Бр░др▒Лр░Вр░жр░┐...",
        consentPending: "тП│ р░ор▒А р░Ер░Вр░Чр▒Ар░Хр░╛р░░р░В р░Жр░ор▒Лр░жр░В р░Хр▒Лр░╕р░В р░кр▒Жр░Вр░бр░┐р░Вр░Чр▒НтАМр░▓р▒Л р░Йр░Вр░жр░┐.",
        waitForApproval: "р░жр░пр░Ър▒Зр░╕р░┐ р░ор▒А р░Ер░Вр░Чр▒Ар░Хр░╛р░░р░╛р░ир▒Нр░ир░┐ р░кр▒Нр░░р░╛р░╕р▒Жр░╕р▒Н р░Ър▒Зр░╕р▒Нр░др▒Бр░ир▒Нр░ир░кр▒Нр░кр▒Бр░бр▒Б р░╡р▒Зр░Ър░┐ р░Йр░Вр░бр░Вр░бр░┐. р░Зр░жр░┐ р░Хр▒Кр░ир▒Нр░ир░┐ р░ир░┐р░ор░┐р░╖р░╛р░▓р▒Б р░кр░Яр▒Нр░Яр░╡р░Ър▒Нр░Ър▒Б.",
        consentRejected: "тЭМ р░ор▒А р░Ер░Вр░Чр▒Ар░Хр░╛р░░р░В р░др░┐р░░р░╕р▒Нр░Хр░░р░┐р░Вр░Ър░мр░бр░┐р░Вр░жр░┐.",
        requestResendConsent: "р░Хр▒Кр░др▒Нр░д р░Ер░Вр░Чр▒Ар░Хр░╛р░░ р░╕р░Вр░жр▒Зр░╢р░╛р░ир▒Нр░ир░┐ р░Ер░нр▒Нр░пр░░р▒Нр░ер░┐р░Вр░Ър░Вр░бр░┐",
        consentResendRequested: "тЬЙя╕П р░ор▒Зр░ор▒Б р░Ер░Вр░Чр▒Ар░Хр░╛р░░ р░╕р░Вр░жр▒Зр░╢р░╛р░ир▒Нр░ир░┐ р░ор░│р▒Нр░▓р▒А р░кр░Вр░кр░ор░ир░┐ р░Ер░нр▒Нр░пр░░р▒Нр░ер░┐р░Вр░Ър░╛р░ор▒Б.",
        waitForNewConsent: "р░ор▒Ар░░р▒Б р░др▒Нр░╡р░░р░▓р▒Л р░Хр▒Кр░др▒Нр░д р░Ер░Вр░Чр▒Ар░Хр░╛р░░ р░╕р░Вр░жр▒Зр░╢р░╛р░ир▒Нр░ир░┐ р░Ер░Вр░жр▒Бр░Хр▒Бр░Вр░Яр░╛р░░р▒Б. р░жр░пр░Ър▒Зр░╕р░┐ р░ор▒А WhatsApp р░╕р░Вр░жр▒Зр░╢р░╛р░▓р░ир▒Б р░др░ир░┐р░Цр▒А р░Ър▒Зр░пр░Вр░бр░┐.",
        consentResendError: "тЪая╕П р░Хр▒Кр░др▒Нр░д р░Ер░Вр░Чр▒Ар░Хр░╛р░░ р░╕р░Вр░жр▒Зр░╢р░╛р░ир▒Нр░ир░┐ р░Ер░нр▒Нр░пр░░р▒Нр░ер░┐р░Вр░Ър░бр░В р░╕р░╛р░зр▒Нр░пр░В р░Хр░╛р░▓р▒Зр░жр▒Б. р░жр░пр░Ър▒Зр░╕р░┐ р░др░░р▒Нр░╡р░╛р░д р░ор░│р▒Нр░▓р▒А р░кр▒Нр░░р░пр░др▒Нр░ир░┐р░Вр░Ър░Вр░бр░┐.",
        waitForConsentApproval: "р░ор▒А р░лр▒Лр░ир▒НтАМр░Хр░┐ р░Ер░Вр░Чр▒Ар░Хр░╛р░░ р░Жр░ор▒Лр░жр░В р░╕р░Вр░жр▒Зр░╢р░╛р░ир▒Нр░ир░┐ р░кр▒Кр░Вр░жр░бр░╛р░ир░┐р░Хр░┐ р░Хр▒Кр░Вр░д р░╕р░ор░пр░В р░╡р▒Зр░Ър░┐ р░Йр░Вр░бр░Вр░бр░┐ р░ор░░р░┐р░пр▒Б р░Ж р░╕р░Вр░жр▒Зр░╢р░╛р░ир░┐р░Хр░┐ р░Ер░Вр░Чр▒Ар░Хр░╛р░░р░╛р░ир▒Нр░ир░┐ р░Зр░╡р▒Нр░╡р░Вр░бр░┐.",
        diversionProcessHelp: "р░жр░пр░Ър▒Зр░╕р░┐ р░ор░╛р░░р▒Нр░Чр░ор░╛р░░р▒Нр░кр▒Б р░кр▒Нр░░р░Хр▒Нр░░р░┐р░пр░ир▒Б р░Хр▒Кр░ир░╕р░╛р░Чр░┐р░Вр░Ър░Вр░бр░┐ р░▓р▒Зр░жр░╛ р░╕р░╣р░╛р░пр░В р░Хр▒Лр░╕р░В 'help' р░Яр▒Ир░кр▒Н р░Ър▒Зр░пр░Вр░бр░┐.",
        alerts: {
            longStoppage: `тЪая╕П *р░жр▒Ар░░р▒Нр░Шр░Хр░╛р░▓р░┐р░Х р░Жр░Чр░┐р░кр▒Лр░╡р░бр░В р░Ер░▓р░░р▒Нр░Яр▒Н*
р░╡р░╛р░╣р░ир░В {location} р░╡р░жр▒Нр░ж {duration} р░ир▒Бр░Вр░бр░┐ р░Жр░Чр░┐ р░Йр░Вр░жр░┐.
р░жр░пр░Ър▒Зр░╕р░┐ р░Жр░Чр░┐р░кр▒Лр░╡р░бр░╛р░ир░┐р░Хр░┐ р░Хр░╛р░░р░гр░╛р░ир▒Нр░ир░┐ р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐ р░▓р▒Зр░жр░╛ р░╡р░┐р░╡р░░р░г р░Зр░╡р▒Нр░╡р░Вр░бр░┐.`,
            
            routeDeviation: `тЪая╕П *р░ор░╛р░░р▒Нр░Чр░ор░╛р░░р▒Нр░кр▒Б р░Ер░▓р░░р▒Нр░Яр▒Н*
р░╡р░╛р░╣р░ир░В р░кр▒Нр░░р░гр░╛р░│р░┐р░Х р░ор░╛р░░р▒Нр░Чр░В р░ир▒Бр░Вр░бр░┐ р░╡р▒Ир░Хр░▓р▒Нр░пр░В р░Ър▒Жр░Вр░жр░┐р░Вр░жр░┐.
р░кр▒Нр░░р░╕р▒Нр░др▒Бр░д р░╕р▒Нр░ер░╛р░ир░В: {location}
р░ор░╛р░░р▒Нр░Чр░В р░ир▒Бр░Вр░бр░┐ р░жр▒Вр░░р░В: {deviationDistance} р░Хр░┐.р░ор▒А
р░жр░пр░Ър▒Зр░╕р░┐ р░╡р▒Ир░Хр░▓р▒Нр░пр░╛р░ир░┐р░Хр░┐ р░Хр░╛р░░р░гр░╛р░ир▒Нр░ир░┐ р░╡р░┐р░╡р░░р░┐р░Вр░Ър░Вр░бр░┐.`,
            
            diversion: {
                initial: `тЪая╕П *р░ор░╛р░░р▒Нр░Чр░ор░╛р░░р▒Нр░кр▒Б р░╣р▒Жр░Ър▒Нр░Ър░░р░┐р░Х*
р░╡р░╛р░╣р░ир░В р░кр▒Нр░░р░гр░╛р░│р░┐р░Х р░ор░╛р░░р▒Нр░Чр░В р░ир▒Бр░Вр░бр░┐ р░╡р▒Ир░Хр░▓р▒Нр░пр░В р░Ър▒Жр░Вр░жр░┐р░Вр░жр░┐.
р░кр▒Нр░░р░╕р▒Нр░др▒Бр░д р░╕р▒Нр░ер░╛р░ир░В: {location}
р░ор░╛р░░р▒Нр░Чр░В р░ир▒Бр░Вр░бр░┐ р░жр▒Вр░░р░В: {deviationDistance} р░Хр░┐.р░ор▒А

р░И р░╕р▒Нр░ер░╛р░ир░Вр░▓р▒Л р░Ер░ир▒НтАМр░▓р▒Лр░бр░┐р░Вр░Чр▒Н р░Ьр░░р▒Бр░Чр▒Бр░др▒Лр░Вр░жр░╛?`,
                unloadingQuery: `ЁЯУж *р░Ер░ир▒НтАМр░▓р▒Лр░бр░┐р░Вр░Чр▒Н р░ир░┐р░░р▒Нр░зр░╛р░░р░г*
р░жр░пр░Ър▒Зр░╕р░┐ р░Ор░╡р░░р▒Б р░Ер░ир▒НтАМр░▓р▒Лр░бр░┐р░Вр░Чр▒НтАМр░Хр░┐ р░Ер░зр░┐р░Хр░╛р░░р░В р░Зр░Ър▒Нр░Ър░╛р░░р▒Л р░др▒Жр░▓р░┐р░пр░Ьр▒Зр░пр░Вр░бр░┐:
1. р░Хр░ир▒Нр░╕р▒Ир░ир▒А
2. р░Яр▒Нр░░р░╛р░ир▒Нр░╕р▒НтАМр░кр▒Лр░░р▒Нр░Яр░░р▒Н
3. р░Зр░др░░р▒Бр░▓р▒Б (р░жр░пр░Ър▒Зр░╕р░┐ р░кр▒Зр░░р▒Нр░Хр▒Кр░ир░Вр░бр░┐)`,
                unloadingPointsQuery: "р░ор▒Ар░░р▒Б р░Ор░ир▒Нр░ир░┐ р░╕р▒Нр░ер░╛р░ир░╛р░▓р░▓р▒Л р░Ер░ир▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░╕р▒Нр░др▒Бр░ир▒Нр░ир░╛р░░р▒Б?",
                locationDetailsPrompt: `р░жр░пр░Ър▒Зр░╕р░┐ р░Ер░ир▒НтАМр░▓р▒Лр░бр░┐р░Вр░Чр▒Н р░кр░╛р░пр░┐р░Вр░Яр▒Н #{pointNumber} р░Хр▒Лр░╕р░В р░╡р░┐р░╡р░░р░╛р░▓р░ир▒Б р░Ер░Вр░жр░┐р░Вр░Ър░Вр░бр░┐:
1. р░╕р▒Нр░ер░╛р░ир░╛р░ир▒Нр░ир░┐ р░╖р▒Зр░░р▒Н р░Ър▒Зр░пр░Вр░бр░┐
2. р░Ер░ир▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░╕р░┐р░и р░мр▒Нр░пр░╛р░Чр▒Бр░▓ р░╕р░Вр░Цр▒Нр░пр░ир▒Б р░ир░ор▒Лр░жр▒Б р░Ър▒Зр░пр░Вр░бр░┐`,
                locationReceived: "ЁЯУН р░╕р▒Нр░ер░╛р░ир░В р░╕р▒Нр░╡р▒Ар░Хр░░р░┐р░Вр░Ър░мр░бр░┐р░Вр░жр░┐: {address}\nр░Ер░Хр▒Нр░╖р░╛р░Вр░╢р░В: {latitude}\nр░░р▒Зр░Цр░╛р░Вр░╢р░В: {longitude}",
                bagsPrompt: "р░И р░╕р▒Нр░ер░╛р░ир░Вр░▓р▒Л р░Ер░ир▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░╕р░┐р░и р░мр▒Нр░пр░╛р░Чр▒Бр░▓ р░╕р░Вр░Цр▒Нр░пр░ир▒Б р░ир░ор▒Лр░жр▒Б р░Ър▒Зр░пр░Вр░бр░┐:",
                unloadingSuccess: "тЬЕ {numPoints} р░╕р▒Нр░ер░╛р░ир░╛р░▓ р░Хр▒Лр░╕р░В р░Ер░ир▒НтАМр░▓р▒Лр░бр░┐р░Вр░Чр▒Н р░╡р░┐р░╡р░░р░╛р░▓р▒Б р░╡р░┐р░Ьр░пр░╡р░Вр░др░Вр░Чр░╛ р░ир░ор▒Лр░жр▒Б р░Ър▒Зр░пр░мр░бр▒Нр░бр░╛р░пр░┐.",
                epodPrompt: "р░жр░пр░Ър▒Зр░╕р░┐ ePOD р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░ор░░р░┐р░пр▒Б OTP р░зр▒Гр░╡р▒Ар░Хр░░р░гр░др▒Л р░Хр▒Кр░ир░╕р░╛р░Чр░Вр░бр░┐.",
                normalDeviation: `р░жр░пр░Ър▒Зр░╕р░┐ р░╡р▒Ир░Хр░▓р▒Нр░пр░╛р░ир░┐р░Хр░┐ р░Хр░╛р░░р░гр░╛р░ир▒Нр░ир░┐ р░Ор░Вр░Ър▒Бр░Хр▒Лр░Вр░бр░┐:
1. р░Яр▒Нр░░р░╛р░лр░┐р░Хр▒Н р░░р░жр▒Нр░жр▒А
2. р░░р▒Лр░бр▒Нр░бр▒Б р░Ер░бр▒Нр░бр░Вр░Хр░┐
3. р░кр▒Лр░▓р▒Ар░╕р▒Н р░Ър▒Жр░Хр▒НтАМр░кр▒Лр░╕р▒Нр░Яр▒Н
4. р░╡р░╛р░╣р░и р░╕р░ор░╕р▒Нр░п
5. р░Зр░др░░р░В (р░жр░пр░Ър▒Зр░╕р░┐ р░кр▒Зр░░р▒Нр░Хр▒Кр░ир░Вр░бр░┐)`,
                approachingDelivery50KM: `ЁЯУН *р░бр▒Жр░▓р░┐р░╡р░░р▒А р░кр░╛р░пр░┐р░Вр░Яр▒Н р░╡р░жр▒Нр░жр░Хр▒Б р░Ър▒Зр░░р▒Бр░Хр▒Бр░Вр░Яр▒Бр░ир▒Нр░ир░╛р░░р▒Б*
р░ор▒Ар░░р▒Б р░Зр░кр▒Нр░кр▒Бр░бр▒Б р░бр▒Жр░▓р░┐р░╡р░░р▒А р░╕р▒Нр░ер░╛р░ир░╛р░ир░┐р░Хр░┐ 50 р░Хр░┐.р░ор▒А р░жр▒Вр░░р░Вр░▓р▒Л р░Йр░ир▒Нр░ир░╛р░░р▒Б.
р░кр▒Нр░░р░╕р▒Нр░др▒Бр░д р░╕р▒Нр░ер░╛р░ир░В: {location}
р░Ер░Вр░Ър░ир░╛ р░Ър▒Зр░░р▒Бр░Хр▒Бр░ир▒З р░╕р░ор░пр░В: {eta}
р░бр▒Жр░▓р░┐р░╡р░░р▒А р░╕р▒Нр░ер░╛р░ир░В: {destination}

р░жр░пр░Ър▒Зр░╕р░┐ р░Чр░ор▒Нр░пр░╕р▒Нр░ер░╛р░ир░Вр░▓р▒Л р░жр░┐р░Чр▒Бр░ор░др░┐ р░Хр▒Лр░╕р░В р░╕р░┐р░жр▒Нр░зр░В р░Хр░Вр░бр░┐.`,
                epodOtpFlow: `ЁЯУж *р░бр▒Жр░▓р░┐р░╡р░░р▒А р░ир░┐р░░р▒Нр░зр░╛р░░р░г р░Ер░╡р░╕р░░р░В*
р░ор▒Ар░░р▒Б р░бр▒Жр░▓р░┐р░╡р░░р▒А р░╕р▒Нр░ер░╛р░ир░╛р░ир░┐р░Хр░┐ р░Ър▒Зр░░р▒Бр░Хр▒Бр░ир▒Нр░ир░╛р░░р▒Б.
р░жр░пр░Ър▒Зр░╕р░┐ р░бр▒Жр░▓р░┐р░╡р░░р▒Ар░ир░┐ р░ир░┐р░░р▒Нр░зр░╛р░░р░┐р░Вр░Ър░бр░╛р░ир░┐р░Хр░┐ р░Хр░┐р░Вр░жр░┐ р░жр░╢р░▓р░ир▒Б р░кр▒Вр░░р▒Нр░др░┐ р░Ър▒Зр░пр░Вр░бр░┐:
1. ePOD р░кр░др▒Нр░░р░╛р░ир▒Нр░ир░┐ р░Ер░кр▒НтАМр░▓р▒Лр░бр▒Н р░Ър▒Зр░пр░Вр░бр░┐
2. р░Хр░ир▒Нр░╕р▒Ир░ир▒А р░ир▒Бр░Вр░бр░┐ р░кр▒Кр░Вр░жр░┐р░и OTPр░ир░┐ р░ир░ор▒Лр░жр▒Б р░Ър▒Зр░пр░Вр░бр░┐`,
                deliveryCompleted: `тЬЕ *р░бр▒Жр░▓р░┐р░╡р░░р▒А р░╡р░┐р░Ьр░пр░╡р░Вр░др░Вр░Чр░╛ р░кр▒Вр░░р▒Нр░др░пр░┐р░Вр░жр░┐*
р░бр▒Жр░▓р░┐р░╡р░░р▒Ар░ир░┐ р░кр▒Вр░░р▒Нр░др░┐ р░Ър▒Зр░╕р░┐р░ир░Вр░жр▒Бр░Хр▒Б р░зр░ир▒Нр░пр░╡р░╛р░жр░╛р░▓р▒Б.
р░кр▒Нр░░р░пр░╛р░гр░В ID: {tripId}
р░Чр░ор▒Нр░пр░╕р▒Нр░ер░╛р░ир░В: {destination}
р░бр▒Жр░▓р░┐р░╡р░░р▒А р░ир░┐р░░р▒Нр░зр░╛р░░р░г р░╕р▒Нр░ер░╛р░ир░В: {location}

р░кр▒Нр░░р░пр░╛р░гр░В р░Зр░кр▒Нр░кр▒Бр░бр▒Б р░кр▒Вр░░р▒Нр░др░┐ р░Ър▒Зр░пр░мр░бр░┐р░Вр░жр░┐.`,
                returnToRoute: 'р░╡р▒Ар░▓р▒Ир░ир░Вр░д р░др▒Нр░╡р░░р░Чр░╛ р░кр▒Нр░░р░гр░╛р░│р░┐р░Хр░╛р░мр░жр▒Нр░з р░ор░╛р░░р▒Нр░Чр░╛р░ир░┐р░Хр░┐ р░др░┐р░░р░┐р░Чр░┐ р░░р░╛р░╡р░╛р░▓р░┐.'
            },
            
            continuousDriving: `тЪая╕П *р░ир░┐р░░р░Вр░др░░ р░бр▒Нр░░р░╛р░пр░┐р░Вр░Чр▒Н р░Ер░▓р░░р▒Нр░Яр▒Н*
р░бр▒Нр░░р▒Ир░╡р░░р▒Н р░╕р░░р▒Ир░и р░╡р░┐р░╢р▒Нр░░р░╛р░Вр░др░┐ р░▓р▒Зр░Хр▒Бр░Вр░бр░╛ {duration} р░Чр░Вр░Яр░▓р▒Б р░бр▒Нр░░р░╛р░пр░┐р░Вр░Чр▒Н р░Ър▒Зр░╕р▒Нр░др▒Бр░ир▒Нр░ир░╛р░░р▒Б.
р░кр▒Нр░░р░╕р▒Нр░др▒Бр░д р░╕р▒Нр░ер░╛р░ир░В: {location}
р░жр░пр░Ър▒Зр░╕р░┐ р░др░кр▒Нр░кр░ир░┐р░╕р░░р░┐ р░╡р░┐р░╢р▒Нр░░р░╛р░Вр░др░┐ р░др▒Ар░╕р▒Бр░Хр▒Лр░╡р░бр░В р░ир░┐р░░р▒Нр░зр░╛р░░р░┐р░Вр░Ър░Вр░бр░┐.`,
            
            nightDriving: `тЪая╕П *р░░р░╛р░др▒Нр░░р░┐ р░бр▒Нр░░р░╛р░пр░┐р░Вр░Чр▒Н р░Ер░▓р░░р▒Нр░Яр▒Н*
р░╡р░╛р░╣р░ир░В р░ир░┐р░╖р▒Зр░зр░┐р░д р░░р░╛р░др▒Нр░░р░┐ р░╕р░ор░пр░Вр░▓р▒Л ({time}) р░кр▒Нр░░р░пр░╛р░гр░┐р░╕р▒Нр░др▒Лр░Вр░жр░┐.
р░кр▒Нр░░р░╕р▒Нр░др▒Бр░д р░╕р▒Нр░ер░╛р░ир░В: {location}
р░жр░пр░Ър▒Зр░╕р░┐ р░░р░╛р░др▒Нр░░р░┐ р░бр▒Нр░░р░╛р░пр░┐р░Вр░Чр▒Н р░Ер░ир▒Бр░ор░др░┐ р░кр▒Кр░Вр░жр░мр░бр░┐р░Вр░жр▒Л р░ир░┐р░░р▒Нр░зр░╛р░░р░┐р░Вр░Ър░Вр░бр░┐.`,
            
            overSpeeding: `ЁЯЪи *р░Ер░зр░┐р░Х р░╡р▒Зр░Чр░В р░Ер░▓р░░р▒Нр░Яр▒Н*
р░╡р░╛р░╣р░и р░╡р▒Зр░Чр░В: {speed} р░Хр░┐.р░ор▒А/р░Чр░Вр░Я
р░╡р▒Зр░Ч р░кр░░р░┐р░ор░┐р░др░┐: {speedLimit} р░Хр░┐.р░ор▒А/р░Чр░Вр░Я
р░╕р▒Нр░ер░╛р░ир░В: {location}
р░жр░пр░Ър▒Зр░╕р░┐ р░бр▒Нр░░р░╛р░пр░┐р░Вр░Чр▒НтАМр░ир░┐ р░╡р▒Зр░Ч р░кр░░р░┐р░ор░┐р░др▒Бр░▓р▒Б р░кр░╛р░Яр░┐р░Вр░Ър░ор░ир░┐ р░╕р▒Вр░Ър░┐р░Вр░Ър░Вр░бр░┐.`
        }
    }
};

// Error Messages
export const ErrorMessages = {
    INVALID_LANGUAGE: 'Invalid language selected',
    INVALID_STATE: 'Invalid state transition',
    ELEMENT_NOT_FOUND: 'Required element not found',
    MESSAGE_TOO_LONG: 'Message exceeds maximum length',
    INVALID_TRIP_STATE: 'Invalid trip state',
    INVALID_LOCATION: 'Invalid location format',
    INVALID_OTP: 'Invalid OTP format',
    UPLOAD_FAILED: 'Document upload failed',
    NETWORK_ERROR: 'Network connection error'
};

// Bot States
export const BotState = {
    INITIAL: 'INITIAL',
    LANGUAGE_SELECTION: 'LANGUAGE_SELECTION',
    CONSENT_PENDING: 'CONSENT_PENDING',
    CONSENT_MANAGEMENT: 'CONSENT_MANAGEMENT',
    CONSENT_REJECTED: 'CONSENT_REJECTED',
    TRIP_STARTED: 'TRIP_STARTED',
    IN_TRANSIT: 'IN_TRANSIT',
    STOPPAGE_REPORTED: 'STOPPAGE_REPORTED',
    DELIVERY_APPROACHING: 'DELIVERY_APPROACHING',
    DELIVERY_CONFIRMATION: 'DELIVERY_CONFIRMATION',
    DOCUMENT_UPLOAD: 'DOCUMENT_UPLOAD',
    OTP_VERIFICATION: 'OTP_VERIFICATION',
    TRIP_COMPLETED: 'TRIP_COMPLETED'
};

// Utility Functions
export function validateMessage(message) {
    if (!message || typeof message !== 'string') {
        throw new Error('Invalid message format');
    }
    if (message.length > CONFIG.MAX_MESSAGE_LENGTH) {
        throw new Error(ErrorMessages.MESSAGE_TOO_LONG);
    }
    return message.trim();
}

export function getElement(id) {
    const element = document.getElementById(id);
    if (!element) {
        throw new Error(`${ErrorMessages.ELEMENT_NOT_FOUND}: ${id}`);
    }
    return element;
}

export function handleError(error) {
    console.error('Error:', error);
    return `тЪая╕П ${error.message}`;
}

export function formatMessage(template, data = {}) {
    return template.replace(/{(\w+)}/g, (match, key) => {
        return data[key] || match;
    });
} 